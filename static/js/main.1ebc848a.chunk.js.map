{"version":3,"sources":["CounterApp.js","index.js"],"names":["CounterApp","value","useState","counter","setCounter","onClick","protoType","ProtoTypes","number","isRequired","ReactDOM","render","document","getElementById"],"mappings":"6LAKMA,EAAa,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAAY,EAEEC,mBAASD,GAFX,mBAEtBE,EAFsB,KAEbC,EAFa,KAY9B,OACI,qCACI,6CACA,mCAAMD,EAAN,OACA,wBAAQE,QAZC,WAGbD,GAAY,SAAED,GAAF,OAAeA,EAAU,MASjC,gBACA,wBAAQE,QARG,kBAAMD,EAAWD,EAAU,IAQtC,gBACA,wBAAQE,QARF,kBAAMD,EAAYH,IAQxB,uBAMZD,EAAWM,UAAY,CACnBL,M,OAAQM,EAAWC,OAAOC,YAIfT,Q,MC5BfU,IAASC,OACP,cAAC,EAAD,CAAYV,MAAU,IACtBW,SAASC,eAAe,W","file":"static/js/main.1ebc848a.chunk.js","sourcesContent":["import React from 'react';\r\nimport ProtoTypes from 'prop-types';\r\nimport { useState } from 'react';\r\n\r\n\r\nconst CounterApp = ( {value} ) => {\r\n\r\n    const [ counter, setCounter ] = useState(value)\r\n\r\n    const upNumber = () => {\r\n        //existen dos maneras de manejar estos estados\r\n        // setCounter(counter + 1);\r\n        setCounter( ( counter ) => counter + 1 )\r\n    };\r\n    const downNumber = () => setCounter(counter - 1);\r\n    const reset = () => setCounter( value );\r\n\r\n    return(\r\n        <>\r\n            <h1>Counter App</h1>\r\n            <h2> {counter} </h2>\r\n            <button onClick = { upNumber }>+1</button>\r\n            <button onClick = { downNumber }>-1</button>\r\n            <button onClick = { reset } >Reset</button>\r\n        </>\r\n    );\r\n\r\n};\r\n\r\nCounterApp.protoType = {\r\n    value : ProtoTypes.number.isRequired,\r\n};\r\n\r\n\r\nexport default CounterApp;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport CounterApp from './CounterApp';\r\nimport './style.css'\r\n\r\n\r\nReactDOM.render(\r\n  <CounterApp value = { 0 }  />,  \r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}